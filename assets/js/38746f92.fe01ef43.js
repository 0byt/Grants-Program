"use strict";(self.webpackChunkgrants=self.webpackChunkgrants||[]).push([[39660],{70170:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var n=a(87462),l=(a(67294),a(3905));a(8209);const i={},r="Melodot: Incentive-compatible data availability layer",o={unversionedId:"applications/Melodot",id:"applications/Melodot",title:"Melodot: Incentive-compatible data availability layer",description:"- Team Name: ZeroDAO",source:"@site/applications/Melodot.md",sourceDirName:"applications",slug:"/applications/Melodot",permalink:"/applications/Melodot",draft:!1,editUrl:"https://github.com/w3f/Grants-Program/edit/master/applications/Melodot.md",tags:[],version:"current",frontMatter:{}},s={},d=[{value:"Project Overview \ud83d\udcc4",id:"project-overview-",level:2},{value:"Data Availability Layer",id:"data-availability-layer",level:4},{value:"Project Details",id:"project-details",level:2},{value:"Architecture",id:"architecture",level:3},{value:"Erasure Coding and KZG Commitment",id:"erasure-coding-and-kzg-commitment",level:4},{value:"Farmers",id:"farmers",level:4},{value:"Lifecycle",id:"lifecycle",level:4},{value:"Components",id:"components",level:3},{value:"<strong>Non-Goals</strong>",id:"non-goals",level:3},{value:"<strong>Ecosystem Fit</strong>",id:"ecosystem-fit",level:2},{value:"Similar Projects",id:"similar-projects",level:3},{value:"<strong>Relationship with Polkadot and substrate</strong>",id:"relationship-with-polkadot-and-substrate",level:3},{value:"Team \ud83d\udc65",id:"team-",level:2},{value:"Team members",id:"team-members",level:3},{value:"Contact",id:"contact",level:3},{value:"Team&#39;s experience",id:"teams-experience",level:3},{value:"Team Code Repos",id:"team-code-repos",level:3},{value:"Development Status",id:"development-status",level:3},{value:"Development Roadmap",id:"development-roadmap",level:2},{value:"Overview",id:"overview",level:3},{value:"Milestone 1 \u2014 Erasure coding and KZG",id:"milestone-1--erasure-coding-and-kzg",level:3},{value:"Milestone 2 \u2014 Consensus",id:"milestone-2--consensus",level:3},{value:"Milestone 3 \u2014 Sampling",id:"milestone-3--sampling",level:3},{value:"Milestone 4 \u2014 Farmer",id:"milestone-4--farmer",level:3},{value:"<strong>Future Plans</strong>",id:"future-plans",level:2},{value:"Additional Information\u2795",id:"additional-information",level:2}],m={toc:d},p="wrapper";function u(e){let{components:t,...a}=e;return(0,l.kt)(p,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"melodot-incentive-compatible-data-availability-layer"},"Melodot: Incentive-compatible data availability layer"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Team Name:")," ZeroDAO"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Payment Address:"),"  0xEBCDa7c73EB5Dd7a4314cFf395bE07EB1E24c046 (DAI)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("a",{parentName:"strong",href:"https://github.com/w3f/Grants-Program/tree/master#level_slider-levels"},"Level"),":")," 2")),(0,l.kt)("h2",{id:"project-overview-"},"Project Overview \ud83d\udcc4"),(0,l.kt)("h4",{id:"data-availability-layer"},"Data Availability Layer"),(0,l.kt)("p",null,"The current data availability layer scheme requires the assumption that the network has at least the minimum number of honest nodes.However, due to the need to prevent data retention attacks, the samplers are required to be anonymous, making it difficult to measure the number of samplers. At the same time, samplers are more concerned with data related to themselves, resulting in an uneven distribution of total active samplers over time. The assumption of a minimum number of honest nodes affects the robustness of the data availability layer."),(0,l.kt)("p",null,"Challenging issues in the data availability layer also include: who will perform distributed generation, who will reconstruct the data, who will store the data, how long will the data be stored, and how to ensure that these tasks are well done."),(0,l.kt)("p",null,"One possible approach is to delegate these tasks to consensus validators, but there is a lack of effective incentive mechanisms. For cost considerations, not performing distributed generation, data reconstruction, and data storage is the most profitable for validators. In addition, consuming too many resources of consensus validators is very unfavorable for scalability."),(0,l.kt)("p",null,"Melodot introduces the role of farmers by combining PoSpace, alleviating the system's dependence on the minimum number of honest nodes assumption, and completing an incentive-compatible distributed generation and data storage scheme. Consensus validators now act more like light clients, improving future scalability. You can learn more from this preliminary ",(0,l.kt)("a",{parentName:"p",href:"https://www.notion.so/zerodao/Melodot-Data-Availability-Layer-Whitepaper-b72b1f3de81c40fc94a56763756ce34a"},"whitepaper"),"."),(0,l.kt)("h2",{id:"project-details"},"Project Details"),(0,l.kt)("h3",{id:"architecture"},"Architecture"),(0,l.kt)("h4",{id:"erasure-coding-and-kzg-commitment"},"Erasure Coding and KZG Commitment"),(0,l.kt)("p",null,"Melodot uses 2D Reed-Solomon for data expansion, providing better sampling efficiency. It generates KZG commitments in the row direction, avoiding fraud proofs, similar to Ethereum's Darksharding. Block headers contain KZG commitments and data locations for different apps, allowing light clients to sample or download only data relevant to themselves."),(0,l.kt)("h4",{id:"farmers"},"Farmers"),(0,l.kt)("p",null,"Farmers receive rewards through PoSpace, which is used to verify that participants have allocated a certain amount of storage space on their devices. The consensus mechanism is achieved through a time-memory trade-off approach, which has its origins in the  ",(0,l.kt)("a",{parentName:"p",href:"https://www.semanticscholar.org/paper/Beyond-Hellman's-Time-Memory-Trade-Offs-with-to-of-Abusalah-Alwen/39e70d67eeb5ce140171f6d0629daec3b54d74f3"},"Beyond Hellman")," paper and has been adopted for use in the ",(0,l.kt)("a",{parentName:"p",href:"https://docs.chia.net/proof-of-space/"},"Chia protocol"),". This method allows for a more efficient and secure consensus process compared to traditional energy-intensive mechanisms such as Proof of Work. ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/subspace/consensus-v2-research-paper"},"Subspace improves PoSpace"),' for storing "useful data" and is closely linked to KZG commitments. We are inspired by them, in contrast, Melodot\'s farmers receive rewards through PoSpace rather than reaching consensus. This incentive mechanism ensures that the network can still recover data when natural sampling samples are insufficient and guarantees data storage for at least a specific duration.'),(0,l.kt)("p",null,"Farmers need to complete the distributed generation of specified data, expanding the data generated by block proposers in the column direction. They then calculate the challenge eligibility through the generated data, similar to ",(0,l.kt)("a",{parentName:"p",href:"https://docs.chia.net/signage-and-infusion-points/"},"Chia's filter"),", with only a small portion of farmers eligible to further search for solutions. This design reduces the computation load on farmers, avoids missing the submission of solutions, and allows farmers to devote more bandwidth and capacity resources to data availability sampling and storage. In addition, farmers are more inclined to generate all specified data in a distributed manner, as each chunk represents a potential lottery ticket."),(0,l.kt)("p",null,"Farmers use the committed space to store blob data and maintain its timeliness. New data receives more rewards, while expired data will not be rewarded. Upon obtaining challenge eligibility, farmers need to search for solutions in the stored data, including chunk, data proofs, space proofs, etc. The system adjusts the difficulty based on the reward claims situation. Ultimately, the rewards farmers receive are linearly related to the size of the stored data space and depend on whether they have correctly and promptly completed distributed generation and necessary data reconstruction."),(0,l.kt)("h4",{id:"lifecycle"},"Lifecycle"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://pic.tom24h.com/zerodao/life.png",alt:"Untitled"})),(0,l.kt)("p",null,"A complete blob transaction includes:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Publishing a blob transaction, including the original KZG commitment"),(0,l.kt)("li",{parentName:"ul"},"Block builders collect blob transactions and build blocks, erasure code data, and generate new commitments to be added to the block header"),(0,l.kt)("li",{parentName:"ul"},"Consensus validators verify block validity and, along with farmers, perform preliminary availability sampling (not ensuring 100% validity, but with high probability of being valid), either rejecting or accepting the block"),(0,l.kt)("li",{parentName:"ul"},"Farmers use the block data, commitments, and proofs learned in the previous step to generate specified columns in a distributed manner"),(0,l.kt)("li",{parentName:"ul"},"When the block is finalized",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Farmers with challenge eligibility complete solutions and claim rewards"),(0,l.kt)("li",{parentName:"ul"},"Light clients and consensus validators perform sampling simultaneously"),(0,l.kt)("li",{parentName:"ul"},"Farmers obtain more specified data from the network for storage and delete expired data")))),(0,l.kt)("p",null,"Melodot is developed in phases, with the first phase not implementing the complete process."),(0,l.kt)("h3",{id:"components"},"Components"),(0,l.kt)("p",null,"In this phase, we will implement the following core components:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Erasure-Coding")),(0,l.kt)("p",{parentName:"li"},"A core module for erasure coding and KZG based on ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/sifraitech/rust-kzg"},"rust-kzg"),", including expanding data and generating commitments and proofs, verifying blob, batch verifying blobs, recovering data, verifying the correct expansion of 2D commitments, and expanding column data and witnesses.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Melo-Store")),(0,l.kt)("p",{parentName:"li"},"Interfaces for registering and managing applications, uploading data, and storing data validity data.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Consensus-related extensions")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"excutive_das"))," pallet: An extension of the ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"frame-excutive"))," pallet for scheduling block execution and validation related to DAS"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"system_das"))," pallet: An extension of the ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"frame-system"))," pallet, adding new block header generation, actual data generation, and validation."),(0,l.kt)("ol",{start:4},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("strong",{parentName:"li"},"Sampling Core"))),(0,l.kt)("p",null,"The core crate that actually performs sampling, which several clients in the system depend on. This includes data availability sampling, obtaining and propagating data from the DHT network, and managing data through rocksdb."),(0,l.kt)("ol",{start:5},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("strong",{parentName:"li"},"Light Client"))),(0,l.kt)("p",null,"A light client that connects to the network and performs sampling based on the block state, including network implementation, distributed generation, data storage, and actual sampling."),(0,l.kt)("ol",{start:6},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"strong"},"Melo-PoSpace")))),(0,l.kt)("p",null,"A pallet for assigning distributed generation columns to farmers, verifying farmers' challenge chunk, and issuing rewards."),(0,l.kt)("ol",{start:7},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("strong",{parentName:"li"},"Farmer Client"))),(0,l.kt)("p",null,"Connects to the network, obtains raw data, and performs distributed generation; obtains challenges from the chain and searches for solutions to claim rewards."),(0,l.kt)("h3",{id:"non-goals"},(0,l.kt)("strong",{parentName:"h3"},"Non-Goals")),(0,l.kt)("p",null,"The goal of the first phase is to minimally implement a usable system and will not fully implement the details described in the whitepaper. The main differences are:"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"PoSpace")),(0,l.kt)("p",null,"In the first phase, we will only implement a preliminary version of PoSpace, not including the complete PoSpace process. ",(0,l.kt)("a",{parentName:"p",href:"https://subspacelabs.notion.site/Subspace-Dilithium-Consensus-Specification-v2-3-274a730b53eb4c93a8d879b90de532ce"},"Subspace has done an excellent exploration in this regard"),". In the next phase of development, we should be able to reuse much of their work."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Complete Distributed Generation")),(0,l.kt)("p",null,"This phase does not include complete distributed generation. Users still need to submit actual data transactions, so farmers and validators do not need to perform the first phase of sampling."),(0,l.kt)("h2",{id:"ecosystem-fit"},(0,l.kt)("strong",{parentName:"h2"},"Ecosystem Fit")),(0,l.kt)("h3",{id:"similar-projects"},"Similar Projects"),(0,l.kt)("p",null,"There are currently several data availability layer projects, including Ethereum Danksharding, Celestia, Avail, and Eigen DA. Our main difference from them is the introduction of farmers, which solves many tricky problems faced by the data availability layer. Unlike Danksharding, we decouple an independent data availability layer, which is the same principle as Polkadot not supporting smart contracts. Celestia uses a Merkle encoding pattern, requiring fraud proofs and additional assumptions, which we avoid. Avail's data layout uses a 1.5D scheme, which is unacceptable in terms of sampling efficiency, as detailed in the Melodot white paper. Eigen DA is an Ethereum re-collateralization layer implementation of a data availability scheme, with limited public information available, ",(0,l.kt)("a",{parentName:"p",href:"https://ethresear.ch/t/unbundling-pbs-towards-protocol-enforced-proposer-commitments-pepc/13879"},"but it should be in the form of a DA committee"),", which has its applicable scenarios, but is not the same as Melodot."),(0,l.kt)("h3",{id:"relationship-with-polkadot-and-substrate"},(0,l.kt)("strong",{parentName:"h3"},"Relationship with Polkadot and substrate")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"With Melodot as a data availability layer, any parallel chain can easily become a Rollup settlement layer. Polkadot brings more secure interactions between settlement layers, significantly increasing Polkadot's capacity."),(0,l.kt)("li",{parentName:"ol"},"Other teams can develop their own data availability layers based on Melodot.")),(0,l.kt)("h2",{id:"team-"},"Team \ud83d\udc65"),(0,l.kt)("h3",{id:"team-members"},"Team members"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Daqin Lee"),(0,l.kt)("li",{parentName:"ul"},"Zhidong Chen"),(0,l.kt)("li",{parentName:"ul"},"Sober Man")),(0,l.kt)("h3",{id:"contact"},"Contact"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Contact Name:")," Daqin Lee"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Contact Email:")," ",(0,l.kt)("a",{parentName:"li",href:"mailto:lee@melodot.io"},"lee@melodot.io"))),(0,l.kt)("h3",{id:"teams-experience"},"Team's experience"),(0,l.kt)("p",null,"Daqin Lee: Full-stack Developer, Rust and Substrate Developer, core developer of Melodot."),(0,l.kt)("p",null,"Chen Zhidong: Full-stack Developer, Tesla Machine Learning Engineer, ",(0,l.kt)("a",{parentName:"p",href:"http://gohack2017.golangfoundation.org/"},"GoHack 2017")," Hackathon ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/sillydong/lbsengine"},"First Prize"),", will serve as a technical advisor for Melodot."),(0,l.kt)("p",null,"Sober Man: Embedded Engineer, with years of backend and embedded development experience."),(0,l.kt)("h3",{id:"team-code-repos"},"Team Code Repos"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/ZeroDAO"},"https://github.com/ZeroDAO")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/DarkingLee"},"https://github.com/DarkingLee")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/sillydong"},"https://github.com/sillydong"))),(0,l.kt)("h3",{id:"development-status"},"Development Status"),(0,l.kt)("p",null,'ZeroDAO previously developed the Ourspace project, which is a reputation system utilizing social relationships and received support from W3F. After that, we shifted our focus to calculating all social networks in Web3. In this process, we found that they were either expensive to interact with or difficult to securely use on-chain. Through in-depth analysis, we summarized these issues as a lack of visibility. Therefore, we temporarily paused the development of Ourspace (we will continue to develop it later) and focused on researching the "visibility" issue, discovering that rollup technology is a good solution to this problem. The data availability layer is the first step in achieving this, and after extensive research, we designed Melodot. The work we have completed so far includes:'),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"https://www.notion.so/zerodao/Melodot-Data-Availability-Layer-Whitepaper-b72b1f3de81c40fc94a56763756ce34a"},"Whitepaper"),": Completed a preliminary whitepaper."),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"https://zerodao.notion.site/Rollup-product-tracking-research-b9448e4464404736858e55972ea12152"},"Research"),": We conducted some research on Rollup and data availability layer projects, and you can see the project list here.")),(0,l.kt)("h2",{id:"development-roadmap"},"Development Roadmap"),(0,l.kt)("h3",{id:"overview"},"Overview"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Total Estimated Duration:")," 4.5 months"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Full-Time Equivalent (FTE):")," 1.5"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Total Costs:")," 28,000 DAI")),(0,l.kt)("h3",{id:"milestone-1--erasure-coding-and-kzg"},"Milestone 1 \u2014 Erasure coding and KZG"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Estimated duration:")," 1 month"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"FTE:")," 1 "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Costs:")," 5,000 USD")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Number"),(0,l.kt)("th",{parentName:"tr",align:null},"Deliverable"),(0,l.kt)("th",{parentName:"tr",align:null},"Specification"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"0a.")),(0,l.kt)("td",{parentName:"tr",align:null},"License"),(0,l.kt)("td",{parentName:"tr",align:null},"Apache 2.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"0b.")),(0,l.kt)("td",{parentName:"tr",align:null},"Documentation"),(0,l.kt)("td",{parentName:"tr",align:null},"We will provide both inline documentation of the code and a basic tutorial that explains how the new functionality works and how they are used.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"0c.")),(0,l.kt)("td",{parentName:"tr",align:null},"Testing and Testing Guide"),(0,l.kt)("td",{parentName:"tr",align:null},"Unit tests will completely cover the Core functionality to ensure functionality and robustness. In the guide, we will describe how to run these tests.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"0d.")),(0,l.kt)("td",{parentName:"tr",align:null},"Docker"),(0,l.kt)("td",{parentName:"tr",align:null},"We will provide Dockerfiles to demonstrate the full functionality of erasure coding and KZG commitments.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1."),(0,l.kt)("td",{parentName:"tr",align:null},"melo_erasure_coding"),(0,l.kt)("td",{parentName:"tr",align:null},"The core part of the system, including 2D erasure coding and KZG commitment-related primitives and common interfaces.")))),(0,l.kt)("h3",{id:"milestone-2--consensus"},"Milestone 2 \u2014 Consensus"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Estimated duration:")," 1.5 months"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"FTE:")," 1"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Costs:")," 7,000 USD")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Number"),(0,l.kt)("th",{parentName:"tr",align:null},"Deliverable"),(0,l.kt)("th",{parentName:"tr",align:null},"Specification"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"0a.")),(0,l.kt)("td",{parentName:"tr",align:null},"License"),(0,l.kt)("td",{parentName:"tr",align:null},"Apache 2.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"0b.")),(0,l.kt)("td",{parentName:"tr",align:null},"Documentation"),(0,l.kt)("td",{parentName:"tr",align:null},"We will provide both inline documentation of the code and a basic tutorial that explains how a user can spin up a client, connect to the client management application and data through a browser, and create a local development chain.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"0c.")),(0,l.kt)("td",{parentName:"tr",align:null},"Testing and Testing Guide"),(0,l.kt)("td",{parentName:"tr",align:null},"Higher-level integration tests and unit tests for all modules. In the guide, we will describe how to run these tests.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"0d.")),(0,l.kt)("td",{parentName:"tr",align:null},"Docker"),(0,l.kt)("td",{parentName:"tr",align:null},"We will provide Dockerfiles to start nodes, create a local test network, and run all integration tests.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1."),(0,l.kt)("td",{parentName:"tr",align:null},"Substrate pallet: excutive_das"),(0,l.kt)("td",{parentName:"tr",align:null},"Modify the existing ",(0,l.kt)("inlineCode",{parentName:"td"},"frame-executive")," pallet to support custom headers while ensuring all original tests continue to function.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2."),(0,l.kt)("td",{parentName:"tr",align:null},"Substrate pallet: system_das"),(0,l.kt)("td",{parentName:"tr",align:null},"Extend the ",(0,l.kt)("inlineCode",{parentName:"td"},"frame-system")," pallet to support the creation of extended headers.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3."),(0,l.kt)("td",{parentName:"tr",align:null},"Substrate pallet: melo_store"),(0,l.kt)("td",{parentName:"tr",align:null},"A core pallet for handling data availability. Main features include: 1) Registering applications. 2) Allowing users to submit data metadata. 3) Validators accessing off-chain storage via OCW and reporting unavailable data. 4) Interface for creating extended block header.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"4."),(0,l.kt)("td",{parentName:"tr",align:null},"melodot-client"),(0,l.kt)("td",{parentName:"tr",align:null},"A substrate client containing a complete data availability layer. The DAS core features include: 1) Accepting user-submitted blob_tx, verifying if the data is correctly encoded, submitting the transaction, and publishing the data to a peer-to-peer network 2) Validators retrieving data transactions from the transaction pool and attempting to fetch the data from DHT to save locally.")))),(0,l.kt)("h3",{id:"milestone-3--sampling"},"Milestone 3 \u2014 Sampling"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Estimated duration:")," 1 month"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"FTE:")," 1.5"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Costs:")," 7,000 USD")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Number"),(0,l.kt)("th",{parentName:"tr",align:null},"Deliverable"),(0,l.kt)("th",{parentName:"tr",align:null},"Specification"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"0a.")),(0,l.kt)("td",{parentName:"tr",align:null},"License"),(0,l.kt)("td",{parentName:"tr",align:null},"Apache 2.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"0b.")),(0,l.kt)("td",{parentName:"tr",align:null},"Documentation"),(0,l.kt)("td",{parentName:"tr",align:null},"We will provide both inline documentation of the code and a basic tutorial that explains how a user can start a light client and connect to the network.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"0c.")),(0,l.kt)("td",{parentName:"tr",align:null},"Testing and Testing Guide"),(0,l.kt)("td",{parentName:"tr",align:null},"Core functions will be fully covered by comprehensive unit tests to ensure functionality and robustness. In the guide, we will describe how to run these tests.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"0d.")),(0,l.kt)("td",{parentName:"tr",align:null},"Docker"),(0,l.kt)("td",{parentName:"tr",align:null},"We will provide Dockerfiles to start a light client, connect to the local test network, and run all integration tests.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"0e.")),(0,l.kt)("td",{parentName:"tr",align:null},"Article"),(0,l.kt)("td",{parentName:"tr",align:null},"We will publish an article explaining how Melodot works, how to run a local test network, and how to run a light client.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1."),(0,l.kt)("td",{parentName:"tr",align:null},"Light client"),(0,l.kt)("td",{parentName:"tr",align:null},"A light client that connects to the network and efficiently performs sampling, stores sampling data, and maintains data availability confidence.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2."),(0,l.kt)("td",{parentName:"tr",align:null},"melo_sampling"),(0,l.kt)("td",{parentName:"tr",align:null},"A decoupled sampling module that provides core functionality related to data sampling.")))),(0,l.kt)("h3",{id:"milestone-4--farmer"},"Milestone 4 \u2014 Farmer"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Estimated duration:")," 1 month"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"FTE:")," 2"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Costs:")," 9,000 USD")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Number"),(0,l.kt)("th",{parentName:"tr",align:null},"Deliverable"),(0,l.kt)("th",{parentName:"tr",align:null},"Specification"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"0a.")),(0,l.kt)("td",{parentName:"tr",align:null},"License"),(0,l.kt)("td",{parentName:"tr",align:null},"Apache 2.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"0b.")),(0,l.kt)("td",{parentName:"tr",align:null},"Documentation"),(0,l.kt)("td",{parentName:"tr",align:null},"We will provide both inline documentation of the code and a basic tutorial that explains how a user can run a farmer client and earn rewards.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"0c.")),(0,l.kt)("td",{parentName:"tr",align:null},"Testing and Testing Guide"),(0,l.kt)("td",{parentName:"tr",align:null},"Core functions will be fully covered by comprehensive unit tests to ensure functionality and robustness. In the guide, we will describe how to run these tests.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"0d.")),(0,l.kt)("td",{parentName:"tr",align:null},"Docker"),(0,l.kt)("td",{parentName:"tr",align:null},"We will provide a Dockerfile that can be used to test all the functionality delivered with this milestone.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"0e.")),(0,l.kt)("td",{parentName:"tr",align:null},"Article"),(0,l.kt)("td",{parentName:"tr",align:null},"We will publish an article explaining the farmer part and the future plans for Melodot, as well as how to run a farmer client.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1."),(0,l.kt)("td",{parentName:"tr",align:null},"melo_farmer"),(0,l.kt)("td",{parentName:"tr",align:null},"Implementation of the farmer client, used to connect to the melodot-client, solve challenges, and distribute and store data.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2."),(0,l.kt)("td",{parentName:"tr",align:null},"melo_PoSpace"),(0,l.kt)("td",{parentName:"tr",align:null},"A pallet used to assign distributed generation tasks to farmers and distribute rewards to farmers.")))),(0,l.kt)("h2",{id:"future-plans"},(0,l.kt)("strong",{parentName:"h2"},"Future Plans")),(0,l.kt)("p",null,"In the near future, we plan to establish a company as the core development team. Our long-term plan is to build the entire ecosystem through a DAO, and we have already formulated a centralized version of the DAO to be developed after the launch of the Melodot testnet."),(0,l.kt)("p",null,"Our short-to-medium-term plan (6 months) includes:"),(0,l.kt)("p",null,"Melodot"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Launch the testnet"),(0,l.kt)("li",{parentName:"ul"},"Identify and eliminate all possible security threats"),(0,l.kt)("li",{parentName:"ul"},"Complete the full PoSpace and distributed generation")),(0,l.kt)("p",null,"SDK"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Develop an SDK based on Substrate for quickly launching settlement layers and sequencer")),(0,l.kt)("h2",{id:"additional-information"},"Additional Information\u2795"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"How did you hear about the Grant Program?")),(0,l.kt)("p",null,"Web3 Foundation website"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Previous grant applications")),(0,l.kt)("p",null,"We have previously applied for ZeroDAO-node, which has now been renamed to (",(0,l.kt)("a",{parentName:"p",href:"https://github.com/ZeroDAO/ourspace"},"ourspace"),")."))}u.isMDXComponent=!0}}]);